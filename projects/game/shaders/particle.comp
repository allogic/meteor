#version 450 core

struct Particle {
	vec3 position;
	vec3 velocity;
};

layout(binding = 0) uniform TimeInfo {
	float time;
	float deltaTime;
} timeInfo;

layout(std430, binding = 1) readonly buffer BufferInputParticle {
	Particle inputParticles[];
};

layout(std430, binding = 2) buffer BufferOutputParticle {
	Particle outputParticles[];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() {
	uint index = gl_GlobalInvocationID.x;

	Particle inputParticle = inputParticles[index];

	outputParticles[index].position = inputParticle.position + inputParticle.velocity * timeInfo.deltaTime;
	outputParticles[index].velocity = inputParticle.velocity;

	if ((outputParticles[index].position.x <= -50.0) || (outputParticles[index].position.x >= 50.0)) {
		outputParticles[index].velocity.x = -outputParticles[index].velocity.x;
	}

	if ((outputParticles[index].position.y <= -50.0) || (outputParticles[index].position.y >= 50.0)) {
		outputParticles[index].velocity.y = -outputParticles[index].velocity.y;
	}
}
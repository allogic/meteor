#version 450 core

layout(push_constant) uniform Dimensions {
	float width;
	float height;
	float depth;
	float reserved;
} dimensions;

layout(binding = 0) uniform TimeInfo {
	float time;
	float deltaTime;
} timeInfo;

layout(binding = 1, rgba8) coherent readonly uniform image2D inputColorImageN;
layout(binding = 2, rgba8) coherent readonly uniform image2D inputColorImageS;
layout(binding = 3, rgba8) coherent readonly uniform image2D inputColorImageW;
layout(binding = 4, rgba8) coherent readonly uniform image2D inputColorImageE;
layout(binding = 5, rgba8) coherent readonly uniform image2D inputColorImage;

layout(binding = 6, rgba8) coherent readonly uniform image2D inputStateImageN;
layout(binding = 7, rgba8) coherent readonly uniform image2D inputStateImageS;
layout(binding = 8, rgba8) coherent readonly uniform image2D inputStateImageW;
layout(binding = 9, rgba8) coherent readonly uniform image2D inputStateImageE;
layout(binding = 10, rgba8) coherent readonly uniform image2D inputStateImage;

layout(binding = 11, rgba8) coherent uniform image2D outputColorImage;
layout(binding = 12, rgba8) coherent uniform image2D outputStateImage;

layout (local_size_x = 32, local_size_y = 32) in;

ivec4 getState(in ivec2 coord) {
	return ivec4(imageLoad(inputStateImage, coord) * 255);
}

void setState(in ivec2 coord, in ivec4 state) {
	imageStore(outputStateImage, coord, state);
}

ivec4 getColor(in ivec2 coord) {
	return ivec4(imageLoad(inputColorImage, coord) * 255);
}

void setColor(in ivec2 coord, in ivec4 state) {
	imageStore(outputColorImage, coord, state);
}

bool isSolid(in ivec2 coord) {
	return getState(coord).r == 255;
}

void applyGravity(in ivec2 coord) {
	ivec2 below = ivec2(coord.x, coord.y - 1);

	if (coord.y > 0) {
		if (isSolid(coord) && !isSolid(below)) {

			setState(below, getState(coord));
			setState(coord, ivec4(0));

			setColor(below, getColor(coord));
			setColor(coord, ivec4(0));
		}
	}
}

void main() {
	ivec2 coord = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);

	applyGravity(coord);
}